{"version":3,"sources":["../src/app.ts"],"sourcesContent":["import fastify, { FastifyInstance } from \"fastify\";\nimport config from \"./config/constants\";\n\nclass App {\n  public app: FastifyInstance;\n  public app_domain: string = config.app.domain;\n  public app_port: number = config.app.port;\n\n  constructor(appInit: { plugins: any; routes: any }) {\n    this.app = fastify({\n      logger: {\n        transport: {\n          target: \"pino-pretty\",\n          options: {\n            translateTime: \"SYS:h:MM:ss\",\n            colorize: true,\n            ignore: \"pid,hostname\",\n          },\n        },\n      },\n    });\n    this.app.addHook(\"preHandler\", (req, _reply, done) => {\n      if (req.body) {\n        req.log.info({ body: req.body }, \"parsed body\");\n      }\n      done();\n    });\n    this.register(appInit.plugins);\n    this.routes(appInit.routes);\n  }\n\n  private register(plugins: {\n    forEach: (arg0: (plugin: any) => void) => void;\n  }) {\n    plugins.forEach((plugin) => {\n      this.app.register(plugin);\n    });\n  }\n\n  public routes(routes: { forEach: (arg0: (routes: any) => void) => void }) {\n    routes.forEach((route) => {\n      const router = new route();\n      this.app.register(router.routes, { prefix: router.prefix_route });\n    });\n\n    this.app.get(\"/healthcheck\", async (request, reply) => {\n      reply.send({ healthcheck: \"server is alive\" });\n    });\n  }\n\n  public listen() {\n    this.app.listen(this.app_port, (err) => {\n      if (err) {\n        this.app.log.fatal({ msg: `Application startup error`, err });\n        process.exit(1);\n      }\n\n      console.log(\n        `App listening on the http://${this.app_domain}:${this.app_port} ðŸš€`\n      );\n    });\n  }\n}\n\nexport default App;\n"],"names":["register","plugins","forEach","plugin","app","routes","route","router","prefix","prefix_route","get","request","reply","send","healthcheck","listen","app_port","err","log","fatal","msg","process","exit","console","app_domain","constructor","appInit","config","domain","port","fastify","logger","transport","target","options","translateTime","colorize","ignore","addHook","req","_reply","done","body","info"],"mappings":"AAAA,kGAgEA,SAAmB,wBAAnB,CAAmB,qBAhEsB,SAAS,eAC/B,oBAAoB,4DA+DvC,CAAmB,CA7DnB,MA4BE,AAAQA,QAAQ,CAACC,CAEhB,CAAE,CACDA,CAAO,CAACC,OAAO,CAAC,AAACC,CAAM,EAAK,CAC1B,IAAI,CAACC,GAAG,CAACJ,QAAQ,CAACG,CAAM,CAAC,CAC1B,CAAC,CACH,AAED,AAAOE,MAAM,CAACA,CAA0D,CAAE,CACxEA,CAAM,CAACH,OAAO,CAAC,AAACI,CAAK,EAAK,CACxB,IAAMC,CAAM,CAAG,IAAID,CAAK,AAAE,AAAC,AAC3B,CAAA,IAAI,CAACF,GAAG,CAACJ,QAAQ,CAACO,CAAM,CAACF,MAAM,CAAE,CAAEG,MAAM,CAAED,CAAM,CAACE,YAAY,CAAE,CAAC,CAClE,CAAC,CAEF,IAAI,CAACL,GAAG,CAACM,GAAG,CAAC,cAAc,CAAE,MAAOC,CAAO,CAAEC,CAAK,GAAK,CACrDA,CAAK,CAACC,IAAI,CAAC,CAAEC,WAAW,CAAE,iBAAiB,CAAE,CAAC,CAC/C,CAAC,CACH,AAED,AAAOC,MAAM,EAAG,CACd,IAAI,CAACX,GAAG,CAACW,MAAM,CAAC,IAAI,CAACC,QAAQ,CAAE,AAACC,CAAG,EAAK,CAClCA,CAAG,GACL,IAAI,CAACb,GAAG,CAACc,GAAG,CAACC,KAAK,CAAC,CAAEC,GAAG,CAAE,2BAA2B,CAAEH,GAAG,CAAHA,CAAG,CAAE,CAAC,CAC7DI,OAAO,CAACC,IAAI,CAAC,CAAC,CAAC,EAGjBC,OAAO,CAACL,GAAG,CACT,CAAC,4BAA4B,EAAE,IAAI,CAACM,UAAU,CAAC,CAAC,EAAE,IAAI,CAACR,QAAQ,CAAC,EAAE,CAAC,CACpE,CACF,CAAC,CACH,AArDDS,YAAYC,CAAsC,CAAE,CAHpD,KAAOF,UAAU,CAAWG,CAAM,QAAA,CAACvB,GAAG,CAACwB,MAAM,AAAC,CAC9C,KAAOZ,QAAQ,CAAWW,CAAM,QAAA,CAACvB,GAAG,CAACyB,IAAI,AAAC,CAGxC,IAAI,CAACzB,GAAG,CAAG0B,GAAAA,CAAO,QAAA,EAAC,CACjBC,MAAM,CAAE,CACNC,SAAS,CAAE,CACTC,MAAM,CAAE,aAAa,CACrBC,OAAO,CAAE,CACPC,aAAa,CAAE,aAAa,CAC5BC,QAAQ,CAAE,CAAA,CAAI,CACdC,MAAM,CAAE,cAAc,CACvB,CACF,CACF,CACF,CAAC,CACF,IAAI,CAACjC,GAAG,CAACkC,OAAO,CAAC,YAAY,CAAE,CAACC,CAAG,CAAEC,CAAM,CAAEC,CAAI,GAAK,CAChDF,CAAG,CAACG,IAAI,EACVH,CAAG,CAACrB,GAAG,CAACyB,IAAI,CAAC,CAAED,IAAI,CAAEH,CAAG,CAACG,IAAI,CAAE,CAAE,aAAa,CAAC,CAEjDD,CAAI,EAAE,CACP,CAAC,CACF,IAAI,CAACzC,QAAQ,CAAC0B,CAAO,CAACzB,OAAO,CAAC,CAC9B,IAAI,CAACI,MAAM,CAACqB,CAAO,CAACrB,MAAM,CAAC,CAC5B,CAiCF,AAEkB"}